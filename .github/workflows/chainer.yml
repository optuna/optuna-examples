name: chainer

on:
  schedule:
    - cron: '0 15 * * *'
  pull_request:
    paths:
      - 'chainer/**'
      - '.github/workflows/chainer.yml'

jobs:
  examples:
    if: (github.event_name == 'schedule' && github.repository == 'optuna/optuna-examples') || (github.event_name != 'schedule')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - name: setup-python${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install (apt)
      run: |
        sudo apt-get update
        sudo apt-get -y install openmpi-bin libopenmpi-dev
    - name: Install (Python)
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools
        pip install git+https://github.com/optuna/optuna.git
        python -c 'import optuna'
        pip install git+https://github.com/optuna/optuna-integration.git
        python -c 'import optuna_integration'

        pip install -r chainer/requirements.txt
    - name: Run examples
      run: |
        python chainer/chainer_simple.py
        python chainer/chainer_integration.py
      env:
        OMP_NUM_THREADS: 1
    - name: Run multi-node examples
      run: |
        export OMPI_MCA_rmaps_base_oversubscribe=yes
        STORAGE_URL=sqlite:///example.db
        for file in `find chainer -name 'chainermn_*.py'`
        do
          echo $file
          STUDY_NAME=`optuna create-study --storage $STORAGE_URL`
          mpirun -n 2 -- python $file $STUDY_NAME $STORAGE_URL > /dev/null
        done
      env:
        OMP_NUM_THREADS: 1
